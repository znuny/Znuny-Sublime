<snippet>
    <content><![CDATA[
${1:my \$CustomerUserIDsRef = \$CustomerUserObject->CustomerSearchDetail(

    # all search fields possible which are defined in CustomerUser::EnhancedSearchFields
    UserLogin     => 'example*',                                    # (optional)
    UserFirstname => 'Firstn*',                                     # (optional)

    # special parameters
    CustomerCompanySearchCustomerIDs => [ 'example.com' ],          # (optional)
    ExcludeUserLogins                => [ 'example', 'doejohn' ],   # (optional)

    # array parameters are used with logical OR operator (all values are possible which
    are defined in the config selection hash for the field)
    UserCountry              => [ 'Austria', 'Germany', ],          # (optional)

    # DynamicFields
    #   At least one operator must be specified. Operators will be connected with AND,
    #       values in an operator with OR.
    #   You can also pass more than one argument to an operator: ['value1', 'value2']
    DynamicField_FieldNameX => \{
        Equals            => 123,
        Like              => 'value*',                # "equals" operator with wildcard support
        GreaterThan       => '2001-01-01 01:01:01',
        GreaterThanEquals => '2001-01-01 01:01:01',
        SmallerThan       => '2002-02-02 02:02:02',
        SmallerThanEquals => '2002-02-02 02:02:02',
    \}

    OrderBy => [ 'UserLogin', 'UserCustomerID' ],                   # (optional)
    # ignored if the result type is 'COUNT'
    # default: [ 'UserLogin' ]
    # (all search fields possible which are defined in
    CustomerUser::EnhancedSearchFields)

    # Additional information for OrderBy:
    # The OrderByDirection can be specified for each OrderBy attribute.
    # The pairing is made by the array indices.

    OrderByDirection => [ 'Down', 'Up' ],                          # (optional)
    # ignored if the result type is 'COUNT'
    # (Down | Up) Default: [ 'Down' ]

    Result => 'ARRAY' || 'COUNT',                                  # (optional)
    # default: ARRAY, returns an array of change ids
    # COUNT returns a scalar with the number of found changes

    Limit => 100,                                                  # (optional)
    # ignored if the result type is 'COUNT'
);
}
]]></content>
    <tabTrigger>znuny.CustomerUserObject.CustomerSearchDetail</tabTrigger>
    <description>6</description>
    <scope>source.perl</scope>
</snippet>
